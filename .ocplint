

(*************************************)
(*   Never edit options files while  *)
(*       the program is running      *)
(*************************************)
(* SECTION : Header                  *)
(* These options must be read first  *)
(*************************************)



(* Module to ignore during the lint. *)
ignored_files = [
  "src/kernel/internal/parsing/parsetreeMap.ml";
  "src/kernel/internal/parsing/parsetreeIter.ml";
  "src/kernel/internal/parsing/parsetreeMap.mli";
  "src/kernel/internal/parsing/parsetreeIter.mli";
  "src/kernel/internal/typing/typedtreeMap.ml";
  "src/kernel/internal/typing/typedtreeIter.ml";
  "src/kernel/internal/typing/typedtreeMap.mli";
  "src/kernel/internal/typing/typedtreeIter.mli";
]
plugin_sempatch = {

(* Detect pattern with semantic patch *)
  flag = true
  sempatch_lint_default = {

(* Module to ignore durint the lint of "Lint from semantic patches (default)" *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Lint from semantic patches (default)" *)
    warnings = "+A"
  }
}
plugin_core = {

(* A style-checker for OCaml sources (code, documentation, interface, metrics, and typography). *)
  flag = true
  code_identifier_length = {

(* Module to ignore durint the lint of "Code Identifier Length" *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Code Identifier Length" *)
    warnings = "+A"

(* Identifiers with a shorter name will trigger a warning *)
    min_identifier_length = 2

(* Identifiers with a longer name will trigger a warning *)
    max_identifier_length = 30
  }
  code_length = {

(* Module to ignore durint the lint of "Code Length" *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Code Length" *)
    warnings = "+A"

(* Maximum line length *)
    max_line_length = 80
  }
  code_list_on_singleton = {

(* Module to ignore durint the lint of "List function on singleton" *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "List function on singleton" *)
    warnings = "+A"
  }
  "phys-comp-allocated-lit" = {

(* Module to ignore durint the lint of "Physical comparison between allocated litterals." *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Physical comparison between allocated litterals." *)
    warnings = "+A"
  }
  interface_missing = {

(* Module to ignore durint the lint of "Missing interface" *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Missing interface" *)
    warnings = "+A"
  }
  "interface-module-type-name" = {

(* Module to ignore durint the lint of "Checks on module type name." *)
    ignored_files = [
    ]

(* Enable/Disable warnings from "Checks on module type name." *)
    warnings = "+A"
  }
}
